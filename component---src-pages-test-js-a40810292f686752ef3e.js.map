{"version":3,"sources":["webpack:///./src/components/fluid.js","webpack:///./src/pages/test.js"],"names":["Fluid","props","state","style","color","height","width","margin","zIndex","fluidLoaded","console","log","render","type","src","className","this","React","Component","test","document","getElementById"],"mappings":"kKAKMA,E,YACF,WAAYC,GAAQ,IAAD,SACnB,cAAMA,IAAN,MACOC,MAAQ,CACXC,MAAO,CACHC,MAAO,QACPC,OAAQ,OACRC,MAAO,OACPC,OAAQ,EACRC,OAAQ,OARG,E,4CAgBrBC,YAAA,WACEC,QAAQC,IAAI,oE,EAGdC,OAAA,WACE,OACI,oCACA,kBAAC,IAAD,CAAWC,KAAK,kBAAkBC,IAAI,mBACtC,4BAAQC,UAAU,eAAeZ,MAAOa,KAAKd,MAAMC,U,GAzBvCc,IAAMC,WA+BXlB,O,8IC7BMmB,GAHRC,SAASC,eAAe,Q,kGAInCT,OAAA,WACE,OACE,6BACE,kBAAC,IAAD,Q,GAJ0BM","file":"component---src-pages-test-js-a40810292f686752ef3e.js","sourcesContent":["import React from 'react';\nimport './test.css'\nimport ScriptTag from 'react-script-tag'\n\n\nclass Fluid extends React.Component {\n    constructor(props) {\n    super(props);\n      this.state = {\n        style: {\n            color: 'black',\n            height: '100%', // Canvas is will respond to size changes without resetting fluid!\n            width: '100%',\n            margin: 0,\n            zIndex: '10'\n          }\n      };\n  }\n\n  // Basically when the component mounts it adds a <script> tag containing\n  // the fluid sim logic which will execute once added, hooking into the <cavnas>\n  \n  fluidLoaded() {\n    console.log(\"WebGL Canvas Loaded // also a callback function if you need it.\")\n  }\n\n  render() {\n    return (\n        <>\n        <ScriptTag type=\"text/javascript\" src=\"/fluid-init.js\" />\n        <canvas className=\"fluid-canvas\" style={this.state.style}></canvas>\n        </>\n    );\n  }\n}\n\nexport default Fluid","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport Fluid from '../components/fluid';\n\nconst root = document.getElementById('root');\n\n\nexport default class test extends Component {\n  render() {\n    return (\n      <div>\n        <Fluid />\n      </div>\n    )\n  }\n}\n\n"],"sourceRoot":""}